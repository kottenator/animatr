{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/easing.js","src/utils.js"],"names":["_utils","require","Easing","exports","linear","x","quadIn","quadOut","this","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","expoIn","Math","pow","expoOut","expoInOut","sineIn","sin","PI","sineOut","sineInOut","circIn","sqrt","circOut","circInOut","backIn","overshoot","backOut","backInOut","bounceIn","bounceOut","bounceInOut","elasticIn","amplitude","period","asin","elasticOut","elasticInOut","swing","cos","ease","cubicBezier","easeIn","easeOut","easeInOut","stepStart","step","stepEnd","x1","y1","x2","y2","t","kx","ky","lx","ly","mx","my","solveQuadraticEquation","solveCubicEquation","n","dir","ceil","floor","a","b","dr","roots","d","push","c","r","rr","fi","p","q","cubicRoot","acos","sort","cbrt"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { solveCubicEquation, solveQuadraticEquation } from './utils';\n\n/**\n * Easing functions collection\n *\n * Combination of:\n *\n * - Robert Penner's easing equations\n * - jQuery easing functions\n * - CSS timing functions\n *\n * Definitions:\n *\n * - [Specific ease-out](x) = 1 - [Specific ease-in](1 - x)\n * - [Specific ease-in-out](x) = x < 0.5 ? 0.5 × [Specific ease-in](2x) : 0.5 + 0.5 * [Specific ease-out](2x - 1)\n */\nexport let Easing = {\n  /**\n   * Linear easing: y = x\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  linear(x) {\n    return x;\n  },\n\n  /**\n   * Quadratic ease-in: y = x²\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quadIn(x) {\n    return x * x;\n  },\n\n  /**\n   * Quadratic ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quadOut(x) {\n    return 1 - this.quadIn(1 - x);\n  },\n\n  /**\n   * Quadratic ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quadInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.quadIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.quadOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   * Cubic ease-in: y = x³\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  cubicIn(x) {\n    return x * x * x;\n  },\n\n  /**\n   * Cubic ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  cubicOut(x) {\n    return 1 - this.cubicIn(1 - x);\n  },\n\n  /**\n   * Cubic ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  cubicInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.cubicIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.cubicOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   Quartic ease-in: y = x⁴\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quartIn(x) {\n    return x * x * x * x;\n  },\n\n  /**\n   * Quartic ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quartOut(x) {\n    return 1 - this.quartIn(1 - x);\n  },\n\n  /**\n   * Quartic ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quartInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.quartIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.quartOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   * Quintic ease-in: y = x⁵\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quintIn(x) {\n    return x * x * x * x * x;\n  },\n\n  /**\n   * Quintic ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quintOut(x) {\n    return 1 - this.quintIn(1 - x);\n  },\n\n  /**\n   * Quintic ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  quintInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.quintIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.quintOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   * Exponential ease-in: x == 0 ? 0 : 2 ^ (10 × (x - 1))\n   *\n   * Not eˣ but similar.\n   * Robert Penner's expo-in easing formula.\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  expoIn(x) {\n    if (x === 0) {\n      return 0;\n    }\n    return Math.pow(2, 10 * (x - 1));\n  },\n\n  /**\n   * Exponential ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  expoOut(x) {\n    return 1 - this.expoIn(1 - x);\n  },\n\n  /**\n   * Exponential ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  expoInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.expoIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.expoOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   * Sinusoidal ease-in: y = 1 - cos(πx / 2)\n   *\n   * Where is sinus? Function may be rewritten as y = 1 + sin(πx / 2 - π / 2)\n   * Robert Penner's sine-in easing formula.\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  sineIn(x) {\n    return 1 + Math.sin(Math.PI / 2 * x - Math.PI / 2);\n  },\n\n  /**\n   * Sinusoidal ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  sineOut(x) {\n    return 1 - this.sineIn(1 - x);\n  },\n\n  /**\n   * Sinusoidal ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  sineInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.sineIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.sineOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   * Circular ease-in: y = 1 - √(1 - x²)\n   *\n   * Quarter of the circle (arc) with radius = 1\n   * Robert Penner's circ-in easing formula.\n   *\n   * @param x\n   * @returns {Number}\n   */\n  circIn(x) {\n    return 1 - Math.sqrt(1 - x * x);\n  },\n\n  /**\n   * Circular ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  circOut(x) {\n    return 1 - this.circIn(1 - x);\n  },\n\n  /**\n   * Circular ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  circInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.circIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.circOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   * Back ease-in (formula by Robert Penner)\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} overshoot - default: 1.70158\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  backIn(x, overshoot) {\n    if (typeof overshoot === 'undefined') {\n      overshoot = 1.70158;\n    }\n    return x * x * (x - overshoot * (1 - x));\n  },\n\n  /**\n   * Back ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} overshoot\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  backOut(x, overshoot) {\n    return 1 - this.backIn(1 - x, overshoot);\n  },\n\n  /**\n   * Back ease-in-out\n   *\n   * Default overshoot value overridden to make ease-in-out transition more smooth.\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} overshoot\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  backInOut(x, overshoot) {\n    if (typeof overshoot === 'undefined') {\n      overshoot = 1.70158 * 1.525;\n    }\n    if (x < 0.5) {\n      return 0.5 * this.backIn(x * 2, overshoot);\n    } else {\n      return 0.5 + 0.5 * this.backOut(x * 2 - 1, overshoot);\n    }\n  },\n\n  /**\n   * Bounce ease-in (formula by Robert Penner)\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  bounceIn(x) {\n    x = 1 - x;\n    if (x < 1 / 2.75) {\n      return 1 - 7.5625 * x * x;\n    } else if (x < 2 / 2.75) {\n      x -= 1.5 / 2.75;\n      return 0.25 - 7.5625 * x * x;\n    } else if (x < 2.5 / 2.75) {\n      x -= 2.25 / 2.75;\n      return 0.0625 - 7.5625 * x * x;\n    } else {\n      x -= 2.625 / 2.75;\n      return 0.015625 - 7.5625 * x * x;\n    }\n  },\n\n  /**\n   * Bounce ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  bounceOut(x) {\n    return 1 - this.bounceIn(1 - x);\n  },\n\n  /**\n   * Bounce ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  bounceInOut(x) {\n    if (x < 0.5) {\n      return 0.5 * this.bounceIn(x * 2);\n    } else {\n      return 0.5 + 0.5 * this.bounceOut(x * 2 - 1);\n    }\n  },\n\n  /**\n   * Elastic ease-in (formula by Robert Penner)\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} amplitude\n   * @param {Number} period\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  elasticIn(x, amplitude, period) {\n    var overshoot;\n    if (x === 0) {\n      return 0;\n    } else if (x === 1) {\n      return 1;\n    } else {\n      if (typeof period === 'undefined') {\n        period = 0.3;\n      }\n      if (typeof amplitude === 'undefined' || amplitude < 1) {\n        amplitude = 1;\n        overshoot = period / 4;\n      } else {\n        overshoot = period / (2 * Math.PI) * Math.asin(1 / amplitude);\n      }\n      x -= 1;\n      return -(amplitude * Math.pow(2, 10 * x)) * Math.sin((x - overshoot) * (2 * Math.PI) / period);\n    }\n  },\n\n  /**\n   * Elastic ease-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} amplitude\n   * @param {Number} period\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  elasticOut(x, amplitude, period) {\n    return 1 - this.elasticIn(1 - x, amplitude, period);\n  },\n\n  /**\n   * Elastic ease-in-out\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} amplitude\n   * @param {Number} period\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  elasticInOut(x, amplitude, period) {\n    if (typeof period === 'undefined') {\n      period = 0.3 * 1.5;\n    }\n    if (x < 0.5) {\n      return 0.5 * this.elasticIn(x * 2, amplitude, period);\n    } else {\n      return 0.5 + 0.5 * this.elasticOut(x * 2 - 1, amplitude, period);\n    }\n  },\n\n  /**\n   * Swing easing: y = 0.5 × (1 - cos(πx))\n   *\n   * jQuery default easing:\n   * https://github.com/jquery/jquery/blob/master/src/effects/Tween.js\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  swing(x) {\n    return 0.5 - Math.cos(x * Math.PI) / 2;\n  },\n\n  /**\n   * Ease easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  ease(x) {\n    return this.cubicBezier(x, 0.25, 0.1, 0.25, 1);\n  },\n\n  /**\n   * Ease-in easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  easeIn(x) {\n    return this.cubicBezier(x, 0.42, 0, 1, 1);\n  },\n\n  /**\n   * Ease-out easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  easeOut(x) {\n    return this.cubicBezier(x, 0, 0, 0.58, 1);\n  },\n\n  /**\n   * Ease-in-out easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  easeInOut(x) {\n    return this.cubicBezier(x, 0.42, 0, 0.58, 1);\n  },\n\n  /**\n   * Step-start easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  stepStart(x) {\n    return this.step(x, 1, 'start');\n  },\n\n  /**\n   * Step-end easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  stepEnd(x) {\n    return this.step(x, 1, 'end');\n  },\n\n  /**\n   * Cubic Bezier easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} x1 - from 0 to 1\n   * @param {Number} y1 - any number, but usually from 0 to 1\n   * @param {Number} x2 - from 0 to 1\n   * @param {Number} y2 - any number, but usually from 0 to 1\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  cubicBezier(x, x1, y1, x2, y2) {\n    var kx = 1 + 3 * x1 - 3 * x2,\n        ky = 1 + 3 * y1 - 3 * y2,\n        lx = -6 * x1 + 3 * x2,\n        ly = -6 * y1 + 3 * y2,\n        mx = 3 * x1,\n        my = 3 * y1,\n        t;\n\n    if (x === 0) {\n      return 0;\n    } else if (kx === 0) {\n      if (lx === 0) {\n        t = x;\n      } else {\n        t = solveQuadraticEquation(mx / lx, -x / lx);\n        t = t[0] > 0 ? t[0] : t[1];\n      }\n    } else {\n      t = solveCubicEquation(lx / kx, mx / kx, -x / kx);\n      t = t[0] > 0 ? t[0] : (t[1] > 0 ? t[1] : t[2]);\n    }\n\n    return ky * t * t * t + ly * t * t + my * t;\n  },\n\n  /**\n   * Step easing: CSS timing function\n   *\n   * @param {Number} x - from 0 to 1\n   * @param {Number} n - amount of steps, integer > 0\n   * @param {string} dir - 'start' or 'end'\n   * @returns {Number} - 0 for 0, 1 for 1\n   */\n  step(x, n, dir) {\n    if (x === 0)\n      return 0;\n\n    switch (dir) {\n      case 'start': return Math.ceil(x * n) / n;\n      case 'end': return Math.floor(x * n) / n;\n    }\n  }\n};\n","/**\n * Solve any quadratic equation in the following form:\n *\n *    x² + a x + b = 0\n *\n * Finds only real roots, not complex.\n *\n * @param {Number} a\n * @param {Number} b\n * @returns {Array.<Number>} - Ordered list of roots\n */\nexport function solveQuadraticEquation(a, b) {\n  var roots = [],\n    d = a * a / 4 - b,\n    dr;\n\n  if (d == 0) {\n    roots.push(-a / 2);\n  } else if (d > 0) {\n    dr = Math.sqrt(d);\n    roots.push(\n      -a / 2 - dr,\n      -a / 2 + dr\n    );\n  }\n\n  return roots;\n}\n\n\n/**\n * Solve any cubic equation in the following form:\n *\n *    x³ + a x² + b x + c = 0\n *\n * Finds only real roots, not complex.\n *\n * Based on Cardano method. This source used in particular:\n * http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n *\n * @param {Number} a\n * @param {Number} b\n * @param {Number} c\n * @returns {Array.<Number>} - Ordered list of roots\n */\nexport function solveCubicEquation(a, b, c) {\n  var roots = [];\n\n  var p = b - a * a / 3,\n      q = c - a * b / 3 + 2 * a * a * a / 27,\n      d, dr, r, rr, fi;\n\n  if (p == 0) {\n    roots.push(-cubicRoot(q) - a / 3);\n  } else if (q == 0) {\n    roots.push(-a / 3);\n    if (p < 0) {\n      roots.push(\n        Math.sqrt(-p) - a / 3,\n        -Math.sqrt(-p) - a / 3\n      );\n    }\n  } else {\n    d = p * p * p / 27 + q * q / 4;\n    if (d === 0) {\n      roots.push(\n        -2 * cubicRoot(q / 2) - a / 3,\n        Math.pow(q / 2, 1 / 3) - a / 3\n      );\n    } else if (d > 0) {\n      dr = Math.sqrt(d);\n      roots.push(cubicRoot(-q / 2 + dr) - cubicRoot(q / 2 + dr) - a / 3);\n    } else {\n      r = Math.sqrt(-p * p * p / 27);\n      rr = Math.pow(r, 1 / 3);\n      fi = Math.acos(-q / (2 * r));\n      roots.push(\n        2 * rr * Math.cos(fi / 3) - a / 3,\n        2 * rr * Math.cos(fi / 3 + 2 * Math.PI / 3) - a / 3,\n        2 * rr * Math.cos(fi / 3 + 4 * Math.PI / 3) - a / 3\n      );\n    }\n  }\n\n  return roots.sort(function (a, b) {\n    return a - b;\n  });\n}\n\n/**\n * Return ∛x\n *\n * @param x\n * @returns {Number}\n */\nfunction cubicRoot(x) {\n  return Math.cbrt ? Math.cbrt(x) : (x >= 0 ? Math.pow(x, 1 / 3) : -Math.pow(-x, 1 / 3));\n}\n"]}